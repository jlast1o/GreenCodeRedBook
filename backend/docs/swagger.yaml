definitions:
  models.NoteDto:
    properties:
      text:
        type: string
      token:
        type: string
    required:
    - text
    - token
    type: object
  models.UserDto:
    properties:
      email:
        type: string
      name:
        type: string
      pass:
        type: string
      phone:
        type: string
    required:
    - email
    - name
    - pass
    - phone
    type: object
info:
  contact: {}
  description: This is a sample swagger for GreenHack
  termsOfService: http://swagger.io/terms/
  title: 2lab API
  version: "1.0"
paths:
  /login:
    get:
      consumes:
      - application/json
      description: Login User by jso in detail
      parameters:
      - description: Login
        in: header
        name: login
        required: true
        type: string
      - description: Password
        in: header
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Login User by json
      tags:
      - Users
  /note:
    post:
      consumes:
      - application/json
      description: Add Note by jso in detail
      parameters:
      - description: Request of Creating Note Object
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.NoteDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Add Note by json
      tags:
      - Notes
  /noteGetAll:
    get:
      consumes:
      - application/json
      description: Add Note by jso in detail
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Add Note by json
      tags:
      - Notes
  /user:
    post:
      consumes:
      - application/json
      description: Add User by jso in detail
      parameters:
      - description: Request of Creating User Object
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UserDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Add User by json
      tags:
      - Users
swagger: "2.0"
